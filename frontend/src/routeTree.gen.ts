/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as TeacherDashboardImport } from './routes/teacher/dashboard'
import { Route as StudentDashboardImport } from './routes/student/dashboard'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminCreateIndexImport } from './routes/admin/create/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TeacherDashboardRoute = TeacherDashboardImport.update({
  path: '/teacher/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const StudentDashboardRoute = StudentDashboardImport.update({
  path: '/student/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

const AdminCreateIndexRoute = AdminCreateIndexImport.update({
  path: '/admin/create/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/student/dashboard': {
      id: '/student/dashboard'
      path: '/student/dashboard'
      fullPath: '/student/dashboard'
      preLoaderRoute: typeof StudentDashboardImport
      parentRoute: typeof rootRoute
    }
    '/teacher/dashboard': {
      id: '/teacher/dashboard'
      path: '/teacher/dashboard'
      fullPath: '/teacher/dashboard'
      preLoaderRoute: typeof TeacherDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/create/': {
      id: '/admin/create/'
      path: '/admin/create'
      fullPath: '/admin/create'
      preLoaderRoute: typeof AdminCreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRoute
  '/about': typeof AboutRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/teacher/dashboard': typeof TeacherDashboardRoute
  '/admin/create': typeof AdminCreateIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRoute
  '/about': typeof AboutRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/teacher/dashboard': typeof TeacherDashboardRoute
  '/admin/create': typeof AdminCreateIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRoute
  '/about': typeof AboutRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/student/dashboard': typeof StudentDashboardRoute
  '/teacher/dashboard': typeof TeacherDashboardRoute
  '/admin/create/': typeof AdminCreateIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/admin/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/student/dashboard'
    | '/teacher/dashboard'
    | '/admin/create'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/admin/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/student/dashboard'
    | '/teacher/dashboard'
    | '/admin/create'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/admin/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/student/dashboard'
    | '/teacher/dashboard'
    | '/admin/create/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRoute
  AboutRoute: typeof AboutRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  StudentDashboardRoute: typeof StudentDashboardRoute
  TeacherDashboardRoute: typeof TeacherDashboardRoute
  AdminCreateIndexRoute: typeof AdminCreateIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute,
  AboutRoute: AboutRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  StudentDashboardRoute: StudentDashboardRoute,
  TeacherDashboardRoute: TeacherDashboardRoute,
  AdminCreateIndexRoute: AdminCreateIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/admin/dashboard",
        "/auth/login",
        "/auth/register",
        "/student/dashboard",
        "/teacher/dashboard",
        "/admin/create/",
        "/admin/users/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/student/dashboard": {
      "filePath": "student/dashboard.tsx"
    },
    "/teacher/dashboard": {
      "filePath": "teacher/dashboard.tsx"
    },
    "/admin/create/": {
      "filePath": "admin/create/index.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
